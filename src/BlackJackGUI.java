
import java.beans.PropertyVetoException;
import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BlackJackGUI.java
 *
 * Created on May 8, 2009, 11:48:32 PM
 */

/**
 *
 * @author bryan
 */
public class BlackJackGUI extends javax.swing.JFrame {
	Game game;

    /** Creates new form BlackJackGUI */
    public BlackJackGUI() {
        initComponents();
	newGamePrompt.setVisible(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                jPanel1 = new javax.swing.JPanel();
                jPanel2 = new javax.swing.JPanel();
                splitButton = new javax.swing.JButton();
                doubleDownButton = new javax.swing.JButton();
                jPanel4 = new javax.swing.JPanel();
                jPanel6 = new javax.swing.JPanel();
                jPanel7 = new javax.swing.JPanel();
                newGamePrompt = new javax.swing.JInternalFrame();
                humanPlayers = new javax.swing.JTextField();
                jLabel1 = new javax.swing.JLabel();
                decks = new javax.swing.JTextField();
                jLabel3 = new javax.swing.JLabel();
                newGameOK = new javax.swing.JButton();
                jButton6 = new javax.swing.JButton();
                jPanel3 = new javax.swing.JPanel();
                hitButton = new javax.swing.JButton();
                stayButton = new javax.swing.JButton();
                jPanel5 = new javax.swing.JPanel();
                menuBar = new javax.swing.JMenuBar();
                fileMenu = new javax.swing.JMenu();
                newMenuItem = new javax.swing.JMenuItem();
                exitMenuItem = new javax.swing.JMenuItem();
                editMenu = new javax.swing.JMenu();
                cutMenuItem = new javax.swing.JMenuItem();
                copyMenuItem = new javax.swing.JMenuItem();
                pasteMenuItem = new javax.swing.JMenuItem();
                deleteMenuItem = new javax.swing.JMenuItem();
                helpMenu = new javax.swing.JMenu();
                contentsMenuItem = new javax.swing.JMenuItem();
                aboutMenuItem = new javax.swing.JMenuItem();

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

                jPanel1.setLayout(new java.awt.BorderLayout());

                splitButton.setText("Spit");
                splitButton.setEnabled(false);
                splitButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                splitButtonActionPerformed(evt);
                        }
                });
                jPanel2.add(splitButton);

                doubleDownButton.setText("Double Down");
                doubleDownButton.setEnabled(false);
                doubleDownButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                doubleDownButtonActionPerformed(evt);
                        }
                });
                jPanel2.add(doubleDownButton);

                jPanel1.add(jPanel2, java.awt.BorderLayout.LINE_END);

                jPanel4.setLayout(new java.awt.BorderLayout());
                jPanel4.add(jPanel6, java.awt.BorderLayout.PAGE_START);

                newGamePrompt.setClosable(true);
                newGamePrompt.setTitle("New Game");
                newGamePrompt.setPreferredSize(new java.awt.Dimension(240, 157));
                newGamePrompt.setVisible(true);

                humanPlayers.setEditable(false);
                humanPlayers.setText("1");

                jLabel1.setText("Max Players:");

                decks.setText("6");

                jLabel3.setText("Decks:");

                newGameOK.setText("OK");
                newGameOK.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                newGameOKActionPerformed(evt);
                        }
                });

                jButton6.setText("Cancel");

                javax.swing.GroupLayout newGamePromptLayout = new javax.swing.GroupLayout(newGamePrompt.getContentPane());
                newGamePrompt.getContentPane().setLayout(newGamePromptLayout);
                newGamePromptLayout.setHorizontalGroup(
                        newGamePromptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(newGamePromptLayout.createSequentialGroup()
                                .addGroup(newGamePromptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(newGamePromptLayout.createSequentialGroup()
                                                .addGap(29, 29, 29)
                                                .addGroup(newGamePromptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jLabel1)
                                                        .addComponent(jLabel3))
                                                .addGap(42, 42, 42)
                                                .addGroup(newGamePromptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(decks, javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(humanPlayers, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(newGamePromptLayout.createSequentialGroup()
                                                .addGap(28, 28, 28)
                                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(newGameOK, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(29, Short.MAX_VALUE))
                );
                newGamePromptLayout.setVerticalGroup(
                        newGamePromptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(newGamePromptLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(newGamePromptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(humanPlayers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(newGamePromptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(decks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(newGamePromptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jButton6)
                                        .addComponent(newGameOK))
                                .addContainerGap())
                );

                javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
                jPanel7.setLayout(jPanel7Layout);
                jPanel7Layout.setHorizontalGroup(
                        jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addComponent(newGamePrompt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(89, Short.MAX_VALUE))
                );
                jPanel7Layout.setVerticalGroup(
                        jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(newGamePrompt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                );

                jPanel4.add(jPanel7, java.awt.BorderLayout.PAGE_END);

                jPanel1.add(jPanel4, java.awt.BorderLayout.PAGE_START);

                hitButton.setText("Hit");
                hitButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                hitButtonActionPerformed(evt);
                        }
                });
                jPanel3.add(hitButton);

                stayButton.setText("Stay");
                stayButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                stayButtonActionPerformed(evt);
                        }
                });
                jPanel3.add(stayButton);

                jPanel1.add(jPanel3, java.awt.BorderLayout.LINE_START);

                getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);
                getContentPane().add(jPanel5, java.awt.BorderLayout.PAGE_START);

                fileMenu.setText("File");

                newMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
                newMenuItem.setText("New Game");
                newMenuItem.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                newMenuItemActionPerformed(evt);
                        }
                });
                fileMenu.add(newMenuItem);

                exitMenuItem.setText("Exit");
                exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                exitMenuItemActionPerformed(evt);
                        }
                });
                fileMenu.add(exitMenuItem);

                menuBar.add(fileMenu);

                editMenu.setText("Edit");

                cutMenuItem.setText("Cut");
                editMenu.add(cutMenuItem);

                copyMenuItem.setText("Copy");
                editMenu.add(copyMenuItem);

                pasteMenuItem.setText("Paste");
                editMenu.add(pasteMenuItem);

                deleteMenuItem.setText("Delete");
                editMenu.add(deleteMenuItem);

                menuBar.add(editMenu);

                helpMenu.setText("Help");

                contentsMenuItem.setText("Contents");
                helpMenu.add(contentsMenuItem);

                aboutMenuItem.setText("About");
                helpMenu.add(aboutMenuItem);

                menuBar.add(helpMenu);

                setJMenuBar(menuBar);

                pack();
        }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void newMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newMenuItemActionPerformed
	    //newGamePrompt.setVisible(true);
	    //newGamePrompt.toFront();
	    int numPlayers = Integer.parseInt(humanPlayers.getText());
	    int numDecks = Integer.parseInt(decks.getText());
	    game = new Game(numPlayers,numDecks);

	    newGamePrompt.setVisible(false);
	    reloadCards();
    }//GEN-LAST:event_newMenuItemActionPerformed

    private void newGameOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGameOKActionPerformed
	    int numPlayers = Integer.parseInt(humanPlayers.getText());
	    int numDecks = Integer.parseInt(decks.getText());
	    game = new Game(numPlayers,numDecks);
	    newGamePrompt.setVisible(false);
	    //Card card1 = new Card("10","spades",10);
	    //Card card2 = new Card("5","hearts",5);
	    //ArrayList<Card> cards = new ArrayList<Card>();
	    //cards.add(card2);
	    //cards.add(card1);
	    //Hand hand = new Hand(cards);
	    reloadCards();
}//GEN-LAST:event_newGameOKActionPerformed

    private void hitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hitButtonActionPerformed
	    // TODO add your handling code here:

	    if (!game.hit()) {
		    newGamePrompt.setTitle("Game Over, you lose");
		    newGamePrompt.setVisible(true);
		    newGamePrompt.toFront();
	    }
	    reloadCards();
}//GEN-LAST:event_hitButtonActionPerformed

    private void stayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stayButtonActionPerformed
	    // TODO add your handling code here:
	    //game.stand();
	    int val = game.currPlayer.getLargestHand().leastValue();
	    if (val>=17){
		    newGamePrompt.setTitle("You Win!");
	    } else {
		    newGamePrompt.setTitle("Game Over");
	    }
	    newGamePrompt.setVisible(true);
	    newGamePrompt.toFront();
	    reloadCards();
    }//GEN-LAST:event_stayButtonActionPerformed

    private void splitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_splitButtonActionPerformed
	    // TODO add your handling code here:
	    game.split();
	    reloadCards();
    }//GEN-LAST:event_splitButtonActionPerformed

    private void doubleDownButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doubleDownButtonActionPerformed
	    // TODO add your handling code here:
	    game.doubleDown();
	    reloadCards();
    }//GEN-LAST:event_doubleDownButtonActionPerformed

    public void reloadCards() {
	    jPanel5.setVisible(false);
	    jPanel5.removeAll();
	    for (int i = 0; i < game.playerList.size(); i++) {
		    System.out.println(game.playerList.get(i).getHands().size());
		    for (int j = 0; j < game.playerList.get(i).getHands().size(); j++) {
			    jBlackjackHand myHand = new jBlackjackHand(game.playerList.get(i).getHands().get(j));
			    jPanel5.add(myHand);
			    myHand.setVisible(true);
		    }
	    }
	    jPanel5.setVisible(true);
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BlackJackGUI().setVisible(true);
            }
        });
    }

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JMenuItem aboutMenuItem;
        private javax.swing.JMenuItem contentsMenuItem;
        private javax.swing.JMenuItem copyMenuItem;
        private javax.swing.JMenuItem cutMenuItem;
        private javax.swing.JTextField decks;
        private javax.swing.JMenuItem deleteMenuItem;
        private javax.swing.JButton doubleDownButton;
        private javax.swing.JMenu editMenu;
        private javax.swing.JMenuItem exitMenuItem;
        private javax.swing.JMenu fileMenu;
        private javax.swing.JMenu helpMenu;
        private javax.swing.JButton hitButton;
        private javax.swing.JTextField humanPlayers;
        private javax.swing.JButton jButton6;
        private javax.swing.JLabel jLabel1;
        private javax.swing.JLabel jLabel3;
        private javax.swing.JPanel jPanel1;
        private javax.swing.JPanel jPanel2;
        private javax.swing.JPanel jPanel3;
        private javax.swing.JPanel jPanel4;
        private javax.swing.JPanel jPanel5;
        private javax.swing.JPanel jPanel6;
        private javax.swing.JPanel jPanel7;
        private javax.swing.JMenuBar menuBar;
        private javax.swing.JButton newGameOK;
        private javax.swing.JInternalFrame newGamePrompt;
        private javax.swing.JMenuItem newMenuItem;
        private javax.swing.JMenuItem pasteMenuItem;
        private javax.swing.JButton splitButton;
        private javax.swing.JButton stayButton;
        // End of variables declaration//GEN-END:variables

}
